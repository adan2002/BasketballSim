#map plot
#generate random points so ggplot can be used
df <- data.frame(x=sample(1:64, 1000, replace=T),
y=sample(1:64, 1000, replace=T))
plot <- ggplot(df, aes(x,y)) +
annotation_custom(rasterGrob(img, width=unit(1,"npc"), height=unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
scale_y_continuous(limits = c(-10, 110)) +
scale_x_continuous(limits = c(0, 50)) +
annotate("rect", xmin=2, xmax=48, ymin=10, ymax=20, alpha=0.7, color='black', fill= sub_df$Color[1]) +
annotate("rect", xmin=2, xmax=48, ymin=20, ymax=30, alpha=0.7, color='black', fill= sub_df$Color[2]) +
annotate("rect", xmin=2, xmax=48, ymin=30, ymax=40, alpha=0.7, color='black', fill= sub_df$Color[3]) +
annotate("rect", xmin=2, xmax=48, ymin=40, ymax=50, alpha=0.7, color='black', fill= sub_df$Color[4]) +
annotate("rect", xmin=2, xmax=48, ymin=50, ymax=60, alpha=0.7, color='black', fill= sub_df$Color[5]) +
annotate("rect", xmin=2, xmax=48, ymin=60, ymax=70, alpha=0.7, color='black', fill= sub_df$Color[6]) +
annotate("rect", xmin=2, xmax=48, ymin=70, ymax=80, alpha=0.7, color='black', fill= sub_df$Color[7]) +
annotate("rect", xmin=2, xmax=48, ymin=80, ymax=90, alpha=0.7, color='black', fill= sub_df$Color[8]) +
annotate("rect", xmin=2, xmax=48, ymin=90, ymax=100, alpha=0.7, color='black', fill= sub_df$Color[9]) +
ggtitle(as.character(sub_df$Tm[1])) +
scale_fill_manual(name = "Treatment & State",
labels = c("0-10%", "10-20%", "20-30%", "30-40%", "40-50%", "50+%"),
values = c(cr0_10, cr10_20, cr20_30, cr30_40, cr40_50, cr50plus)) +
theme(plot.title=element_text(size=20, face="bold")) #font size of title
print(plot)
Sys.sleep(.5)
#store plot into list
plotlist[[n]] <- plot
n = n + 1 #increment counter
}
#plotlist contains color maps for 32 teams
plays
#Team fixed effects columns. Takes a long time. Sorry.
col = 15
for (key in names(team_dict)){
for (i in 1:25249) {
if (plays[i,2]==key) {
plays[i,col] = 1
} else{
plays[i,col] = 0
}
}
col = col + 1
}
plays
col = 13
for (key in names(team_dict)){
for (i in 1:25249) {
if (plays[i,2]==key) {
plays[i,col] = 1
} else{
plays[i,col] = 0
}
}
col = col + 1
}
require(ISLR)
names(Smarket)
32*32
choose(5,2)
choose(18,2)*.1^2*.9^16
choose(18,2)
exp(-10)*10^12/(12!)
12!
factorial(4)
exp(-10)*10^12/factorial(12)
0.25+2*.41+3*.13
1*.25+4*.41+9*.13-1.46^2
1*.09+2*.22+3*.05+2*.11+4*.11+6*.02
1*(0.08+.09+.22+0.05)+2*(.08+.11+.11+.02)
1.46-1.46*1.08
sqrt(.9284)
1*(0.08+.09+.22+0.05)+4*(.08+.11+.11+.02)
1*(0.08+.09+.22+0.05)+4*(.08+.11+.11+.02)-1.08^2
-.1168/(.964*.5536)
choose(20,3)
35*8
factorial(20)/(factorial(3)*factorial(17))
factorial(20)/factorial(17)
4*0.05+9*.08+16*.08+25*.09+36*.14+49*.22+64*.11+81*.05*100*.11+144*.02
4*0.05+9*.08+16*.08+25*.09+36*.14+49*.22+64*.11+81*.05*100*.11+144*.02-6.16^2
sqrt(36.7944)
4*0.05+9*.08+16*.08+25*.09+36*.14+49*.22+64*.11+81*.05+100*.11+144*.02-6.16^2
sqrt(7.2944)
sqrt(66/100*34/100/100)
1-pnorm(-(.1407))
pnorm(.1407)
exp(-0.5)+exp(-.9)
exp(-0.5)*exp(-.9)
1-pnorm(-(..15))
1-pnorm(-(.15))
1-pnorm(-(.15))-.5 + 1-pnorm(-(.05))-.5
pnorm(0.134)
pnorm(1.96)
pnorm(1.96)-50
pnorm(1.96)-.50
2*(pnorm(1.96)-.50)
2*(pnorm(0.134)-.50)
qt(.95, 14)
qt(1-.025, 14)
qt(1-.05/2, 14)
qt(.05/2, 14)
qt(1-.05/2, 14)
2.145*sqrt(0.49,15)
2.145*sqrt(0.49/15)
.1*(1-(1-.1^2))
.05*(1-(1-.05^2))
.05^3
cos(pi/2)
cos(pi)
cos(180)
cos(-180)
cos(0)
pnorm(-abs(-1.18))
sqrt(66/100*34/100)/100)
sqrt((66/100*34/100)/100)
for (year in 1950:2015) {
download.file(url=paste0(
"ftp://ftp.cdc.noaa.gov/Datasets/ncep.reanalysis.dailyavgs/surface/air.sig995.",
year, ".nc"),
destfile=paste0("air.sig995.", year, ".nc"), mode="wb")
}
runif(4)
runif(4)*10
x1 <- runif(20)*10
x2 <- runif(20)*10
x3 <- runif(20)*10
runif(20, min = 25, max=75)
y <- runif(20, min = 25, max=75)
mod <- lm(y ~ x1+x2+x3)
summary(mod)
plot(mod)
55*6
## Webscraper for tables in html
## Use to read in NBA rosters from ESPN
setwd("C:/Users/Adan/Desktop/BasketballSim")
require(rvest)
require(dplyr)
url <- "http://www.basketball-reference.com/leagues/NBA_2016_games.html?lid=header_seasons"
table <- url %>%
html() %>%
html_table()
table[[1]]
tbl_df(table[[1]])
dimesions(table[[1]])
dimensions(table[[1]])
dimension(table[[1]])
dim(table[[1]])
season <-  table[[1]]
season <- tbl_df(reg_season[,c(1,4,6)])
names(reg_season) <-  c("Date", "Away", "Home")
season <-  table[[1]]
season <- tbl_df(season[,c(1,4,6)])
names(season) <-  c("Date", "Away", "Home")
season
within(season, df <- data.frame(do.call('rbind', strsplit(as.character(df), ' ', fixed =TRUE))))
within(season, df$Away <- data.frame(do.call('rbind', strsplit(as.character(df$Away), ' ', fixed =TRUE))))
within(season, Away <- data.frame(do.call('rbind', strsplit(as.character(Away), ' ', fixed =TRUE))))
within(season, Away <- data.frame(do.call('rbind', strsplit(as.character(Away), ' ', fixed =TRUE))))
require(reshape)
df <- transform(season, Away = colsplit(Away, split = " ", names = c('Away City', "Away Name")))
df
df <- tbl_df(transform(season, Away = colsplit(Away, split = " ", names = c('Away City', "Away Name"))))
df
tbl_df(df)
head(df)
df <- tbl_df(transform(season, Away = colsplit(Away, split = " ", names = c('City', "Name"))))
df
df <- tbl_df(transform(season, Home = colsplit(Home, split = " ", names = c('City', "Name"))))
df
df <- tbl_df(transform(season, Away = colsplit(Away, split = " ", names = c('City', "Name"))))
df <- tbl_df(transform(df, Home = colsplit(Home, split = " ", names = c('City', "Name"))))
df
head(df)
df <- tbl_df(transform(season, Away = colsplit(Away, split = " ", names = c('City', "Name"))))
df
head(df)
season
df <- tbl_df(transform(df, Home = colsplit(Home, split = " ", names = c('City', "Name"))))
require(tidyr)
separate(data = season, col = Away, into = c("City", "Name"), sep = ' ')
season
separate(data = season, col = Away, into = c("City1", "City2" "Name"), sep = ' ')
separate(data = season, col = Away, into = c("City1", "City2", "Name"), sep = ' ')
write.table(probMat,file="2016schedule.txt", sep = ',', row.names =F)
write.table(season,file="2016schedule.txt", sep = ',', row.names =F)
setwd("C:/Users/Adan/Desktop/BasketballSim")
write.table(season,file="2016schedule.txt", sep = ',', row.names =F)
write.table(season,file="2016schedule.csv", sep = ',', row.names =F)
s <- tbl_df(read.csv(file = "2016schedule.csv", header = T))
s
s <- s %>%
NBA_teams <- list(ATL = "Atlanta Hawks", BOS = 'Boston Celtics', BKN = "Brooklyn Nets",
CHA = "Charlotte Hornets", CHI = "Chicago Bulls", CLE = "Cleveland Cavaliers",
DAL = "Dallas Mavericks", DEN = "Denver Nuggets", DET = "Detroit Pistons",
GSW  = "Golden State Warriors", HOU = "Houston Rockets", IND = "Indiana Pacers",
LAC = "Los Angeles Clippers", LAL = "Los Angeles Lakers", MEM = "Memphis Grizzlies",
MIA = "Miami Heat", MIL = "Milwaukee Bucks", MIN = "Minnesota Timberwolves",
NYK = "New York Knicks", NO = "New Orleans Pelicans", OKC = "Oklahoma City Thunder",
ORL = "Orlando Magic", PHI = "Philadelphia 76ers", PHO = "Phoenix Suns",
POR = "Portland Trail Blazers", SAC ="Sacramento Kings", SAS = "San Antonio Spurs",
TOR = "Toronto Raptors", UTH = "Utah Jazz", WAS = "Washington Wizards")
Team_names <- c('ATL', 'BOS', 'BKN', 'CHA', 'CHI', 'CLE',
'DAL', 'DEN', 'DET', 'GSW', 'HOU', 'IND',
'LAC', 'LAL', 'MEM', 'MIA', 'MIL', 'MIN',
'NO', 'NYK', 'OKC', 'ORL', 'PHI', 'PHO',
'POR', 'SAC', 'SAS', 'TOR', 'UTH', 'WAS')
NBA_teams <- list(ATL = "Atlanta Hawks", BOS = 'Boston Celtics', BKN = "Brooklyn Nets",
CHA = "Charlotte Hornets", CHI = "Chicago Bulls", CLE = "Cleveland Cavaliers",
DAL = "Dallas Mavericks", DEN = "Denver Nuggets", DET = "Detroit Pistons",
GSW  = "Golden State Warriors", HOU = "Houston Rockets", IND = "Indiana Pacers",
LAC = "Los Angeles Clippers", LAL = "Los Angeles Lakers", MEM = "Memphis Grizzlies",
MIA = "Miami Heat", MIL = "Milwaukee Bucks", MIN = "Minnesota Timberwolves",
NYK = "New York Knicks", NO = "New Orleans Pelicans", OKC = "Oklahoma City Thunder",
ORL = "Orlando Magic", PHI = "Philadelphia 76ers", PHO = "Phoenix Suns",
POR = "Portland Trail Blazers", SAC ="Sacramento Kings", SAS = "San Antonio Spurs",
TOR = "Toronto Raptors", UTH = "Utah Jazz", WAS = "Washington Wizards")
Team_names <- c('ATL', 'BOS', 'BKN', 'CHA', 'CHI', 'CLE',
'DAL', 'DEN', 'DET', 'GSW', 'HOU', 'IND',
'LAC', 'LAL', 'MEM', 'MIA', 'MIL', 'MIN',
'NO', 'NYK', 'OKC', 'ORL', 'PHI', 'PHO',
'POR', 'SAC', 'SAS', 'TOR', 'UTH', 'WAS')
paste(s$Away.City, s$Away.Team)
paste(s$Away.City[1], s$Away.Team[1]) == NBA_teams[ATL]
paste(s$Away.City[1], s$Away.Team[1]) == NBA_teams['ATL']
paste(s$Away.City[1], s$Away.Team[1]) == NBA_teams['DET']
length(s)
length(NBA_teams)
NBA_teams[1]
NBA_teams[2]
for (i in 1:lenght(s$Away.City)){
# match up Away team
j = 0 # initialize counter
while (paste(s$Away.City[j], s$Away.Team[j] != NBA_teams[j]){
j = j + 1
}
s$Away[i] = Team_names[j] # store team
j = 0 # reset counter
# match up Home team
while (paste(s$Home.City[j], s$Home.Team[j] != NBA_teams[j]){
j = j + 1
}
s$Home[i] = Team_names[j] # store team
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 0 # initialize counter
while (paste(s$Away.City[j], s$Away.Team[j] != NBA_teams[j]){
j = j + 1
}
s$Away[i] = Team_names[j] # store team
j = 0 # reset counter
# match up Home team
while (paste(s$Home.City[j], s$Home.Team[j] != NBA_teams[j]){
j = j + 1
}
s$Home[i] = Team_names[j] # store team
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 0 # initialize counter
while (paste(s$Away.City[j], s$Away.Team[j] != NBA_teams[j]){
j = j + 1
}
for (i in 1:length(s$Away.City)){
print (i) }
for (i in 1:length(s$Away.City)){
# match up Away team
j = 0 # initialize counter
while (paste(s$Away.City[j], s$Away.Team[j]) != NBA_teams[j]){
j = j + 1
}
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
while (paste(s$Away.City[j], s$Away.Team[j]) != NBA_teams[j]){
j = j + 1
}
s$Away[i] = Team_names[j] # store team
j = 1 # reset counter
# match up Home team
while (paste(s$Home.City[j], s$Home.Team[j]) != NBA_teams[j]){
j = j + 1
}
s$Home[i] = Team_names[j] # store team
}
s
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
while (paste(s$Away.City[i], s$Away.Team[i]) != NBA_teams[j]){
j = j + 1
}
s$Away[i] = Team_names[j] # store team
j = 1 # reset counter
# match up Home team
while (paste(s$Home.City[i], s$Home.Team[i]) != NBA_teams[j]){
j = j + 1
}
s$Home[i] = Team_names[j] # store team
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
while (paste(s$Away.City[i], s$Away.Team[i]) != NBA_teams[j]){
j = j + 1
print(j)
}
s$Away[i] = Team_names[j] # store team
j = 1 # reset counter
# match up Home team
while (paste(s$Home.City[i], s$Home.Team[i]) != NBA_teams[j]){
j = j + 1
print (j)
}
s$Home[i] = Team_names[j] # store team
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
paste(s$Away.City[i], s$Away.Team[i])
#while (paste(s$Away.City[i], s$Away.Team[i]) != NBA_teams[j]){
#j = j + 1
# print(j)
#}
#s$Away[i] = Team_names[j] # store team
j = 1 # reset counter
# match up Home team
#while (paste(s$Home.City[i], s$Home.Team[i]) != NBA_teams[j]){
# j = j + 1
#print (j)
#}
s$Home[i] = Team_names[j] # store team
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
print(paste(s$Away.City[i], s$Away.Team[i]))
#while (paste(s$Away.City[i], s$Away.Team[i]) != NBA_teams[j]){
#j = j + 1
# print(j)
#}
#s$Away[i] = Team_names[j] # store team
j = 1 # reset counter
# match up Home team
#while (paste(s$Home.City[i], s$Home.Team[i]) != NBA_teams[j]){
# j = j + 1
#print (j)
#}
s$Home[i] = Team_names[j] # store team
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
tname = paste(s$Away.City[i], s$Away.Team[i])) # team name
if (s$Away.City[i] == "LA Clippers"){
tname = s$Away.City[i]
}
print(tname)
#while (paste(s$Away.City[i], s$Away.Team[i]) != NBA_teams[j]){
#j = j + 1
# print(j)
#}
#s$Away[i] = Team_names[j] # store team
j = 1 # reset counter
# match up Home team
#while (paste(s$Home.City[i], s$Home.Team[i]) != NBA_teams[j]){
# j = j + 1
#print (j)
#}
s$Home[i] = Team_names[j] # store team
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
tname = paste(s$Away.City[i], s$Away.Team[i]) # team name
if (s$Away.City[i] == "LA Clippers"){
tname = s$Away.City[i]
}
print(tname)
#while (paste(s$Away.City[i], s$Away.Team[i]) != NBA_teams[j]){
#j = j + 1
# print(j)
#}
#s$Away[i] = Team_names[j] # store team
j = 1 # reset counter
# match up Home team
#while (paste(s$Home.City[i], s$Home.Team[i]) != NBA_teams[j]){
# j = j + 1
#print (j)
#}
s$Home[i] = Team_names[j] # store team
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
tname = paste(s$Away.City[i], s$Away.Team[i]) # team name
print(tname)
if (s$Away.City[i] == "LA Clippers"){
tname = s$Away.City[i]
}
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
if (s$Away.City[i] == "LA Clippers" | s$Away.City[i] == "LA Lakers"){
tname = s$Away.City[i]
}
else{
tname = paste(s$Away.City[i], s$Away.Team[i]) # team name
}
print(tname)
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
if (s$Away.City[i] == "LA Clippers" | s$Away.City[i] == "LA Lakers"){
tname = s$Away.City[i]
}
else{
tname = paste(s$Away.City[i], s$Away.Team[i]) # team name
}
print(tname)
while (tname != NBA_teams[j]){
j = j + 1
print(j)
}
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
if (s$Away.City[i] == "LA Clippers" | s$Away.City[i] == "LA Lakers"){
tname = s$Away.City[i]
}
else{
tname = paste(s$Away.City[i], s$Away.Team[i]) # team name
}
print(tname)
while (tname != NBA_teams[j]){
j = j + 1
print(tname)
}
}
s <- tbl_df(read.csv(file = "2016schedule.csv", header = T))
s
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
tname = paste(s$Away.City[i], s$Away.Team[i]) # team name
print(tname)
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
tname = paste(s$Away.City[i], s$Away.Team[i]) # team name
while (tname != NBA_teams[j]){
j = j + 1
print(tname)
}
}
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
tname = paste(s$Away.City[i], s$Away.Team[i]) # team name
while (tname != NBA_teams[j]){
j = j + 1
print(tname)
}
s$Away[i] = Team_names[j] # store team
j = 1 # reset counter
# match up Home team
tname = paste(s$Away.City[i], s$Away.Team[i]) # team name
while (tname != NBA_teams[j]){
j = j + 1
print (tname)
}
s$Home[i] = Team_names[j] # store team
}
s
for (i in 1:length(s$Away.City)){
# match up Away team
j = 1 # initialize counter
tname = paste(s$Away.City[i], s$Away.Team[i]) # team name
while (tname != NBA_teams[j]){
j = j + 1
print(tname)
}
s$Away[i] = Team_names[j] # store team
j = 1 # reset counter
# match up Home team
tname = paste(s$Home.City[i], s$Home.Team[i]) # team name
while (tname != NBA_teams[j]){
j = j + 1
print (tname)
}
s$Home[i] = Team_names[j] # store team
}
s
url <- "http://www.basketball-reference.com/leagues/NBA_2016_games.html?lid=header_seasons"
table <- url %>%
html() %>%
html_table()
# truncate html table for desired columns
season <-  table[[1]]
season <- tbl_df(season[,c(1,4,6)])
names(season) <-  c("Date", "Away", "Home")
season
s
s[,5:6]
write.csv(s[,5:6],file="2016schedule.csv", sep = ',', row.names =F)
write.csv(s[,5:6],file="2016schedule.csv",  row.names =F)
s
